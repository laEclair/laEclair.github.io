////////// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤–∞

// let elems = document.querySelectorAll('p');

// let arr = Array.from(elems);
// console.log(arr)


//2

// let elems = document.querySelectorAll('p');

// let arr = Array.from(elems);
// let res = arr.slice(1,4)
// console.log(res)


////////////////// —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É children –∏ childNodes


// let div = document.querySelector('div');
// let elems1 = document.querySelectorAll('p');     // NodeList
// let elems2 = document.getElementsByTagName('p'); // HTMLCollection

// let p = document.createElement('p');
// div.append(p);


// for (let node of div.childNodes) {
// 	console.log(node.nodeName); ////// –≤—ã–≤–µ–¥–µ—Ç –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã, —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–µ–∫—Å—Ç, –∫–æ–º–º–µ–Ω—Ç—ã
// }
// for (let child of div.children) {
// 	console.log(child.nodeName); ////// –≤—ã–≤–µ–¥–µ—Ç —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã
// }



////// Map

// let map = new Map;

// let obj1 = {key: 'object1'}
// let obj2 = {key: 'object2'}
// let obj3 = {key: 'object3'}

// let arr1 = [1, 2];
// let arr2 = [3, 4];
// let arr3 = [5, 6];

// map.set(obj1, arr1);
// map.set(obj2, arr2);
// map.set(obj3, arr3);


// console.log(map.get(arr1));
// console.log(map.get(arr2));
// console.log(map.get(arr3));
// console.log(map);


///// c–≤–æ–π—Å—Ç–≤–∞ map

// console.log(map.size); - —Ä–∞–∑–º–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏

// console.log(map.has(arr1)); - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞

// map.delete(arr1); - —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏

// map.clear(); - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é



/////// –ø–µ—Ä–µ–±–æ—Ä map


// let map = new Map;

// let arr1 = [1, 2];
// let arr2 = [3, 4];

// map.set(arr1, 'data1');
// map.set(arr2, 'data2');

// for (let elem of map) {
// 	console.log(elem); // —Å–Ω–∞—á–∞–ª–∞ [[1, 2], 'data1'], –ø–æ—Ç–æ–º [[3, 4], 'data2']
// }

// for (let [key, elem] of map) {  //// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// 	console.log(key);
// 	console.log(elem);
// }


/// –µ—â–µ –º–µ—Ç–æ–¥—ã map

// let values = map.values(); - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π

// let keys = map.keys(); - –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–π

// let entries = map.entries(); - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ

//// –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–π

// let map = new Map;

// let arr1 = [1, 2];
// let arr2 = [3, 4];

// map.set(arr1, 'data1');
// map.set(arr2, 'data2');

// for (let elem of map.entries()) {
// 	console.log(elem); 
// }



//////////// –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π

// let elems = document.querySelectorAll('input');

// let map = new Map;

// for (let elem of elems) {
// 	elem.addEventListener('click', function() {
// 		this.addEventListener('keydown', function(event) {
// 			if(event.key == 'Enter') {
// 				map.set(this.value); 
// 				console.log(map);
// 			}		
// 		});
// 	});
// }



//// –∫–æ–ª–ª–µ–∫—Ü–∏—è set

// let arr = [1, 2, 3, 1, 3, 4];

// let set = new Set([1,2,3]);
// set.add(2);
// console.log(set)




///// –º–µ—Ç–æ–¥—ã set

// let arr = [1, 2, 3, 1, 3, 4];
// let set = new Set([1,2,3]);
// console.log(set.has(4))



//// –ø–µ—Ä–µ–±–æ—Ä set

// let set = new Set;

// set.add(1);
// set.add(2);
// set.add(3);

// let res = 0;

// for (let elem of set) {
// 	res += elem ;
// }
// console.log(res)



//// –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –º–∞—Å—Å–∏–≤

// let set = new Set([1, 2, 3]);
// // let arr = [...set];

// let arr = Array.from(set);

// console.log(arr)


///  –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é

// let arr = [1, 2, 3];

// let set = new Set(arr);
// console.log(set)


///// —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–µ–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é set

// let arr = [1, 2, 3, 1, 3, 4];

// const func = (arr) => {
// 	let res = [...new Set(arr)];
// 	console.log(res); // –≤—ã–≤–µ–¥–µ—Ç [1, 2, 3, 4]
// }
// func(arr)


///// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –¥—É–±–ª–µ–π


// let button = document.querySelector('button');
// let elems  = document.querySelectorAll('p');

// let set = new Set;

// for (let elem of elems) {
// 	elem.addEventListener('click', function() {
// 		set.add(this);
// 	});
// }

// button.addEventListener('click', function() {
// 	for (let elem of set) {
// 		elem.textContent = elem.textContent + '!';
// 	}
// });



/// ArrayBuffer

// let buffer = new ArrayBuffer(32); // –≤—ã–¥–µ–ª–∏–º 8 –±–∞–π—Ç–æ–≤
// console.log(buffer);


//// Symbol

// let id = Symbol("id")

// let obj ={
// 	first :'pppp',
	
// 	last :'dsfsd'
// }

// obj.id =  function  (){
// 	alert('!')
// }
// console.log(obj)



/////// symbol –≤ –æ–±—ä–µ–∫—Ç–µ  –∏ —Ñ—É–Ω–∫—Ü–∏—è

// let symb = Symbol('ru');
// let symb1 = Symbol(1);
// let symb2 = Symbol(2);

// let obj = {
// 	1: 'Anar',
// 	2: 'Danya',
// 	3: 'Vova',
	
// 	[symb1]: 1,
// 	[symb2]: 2,
	
// 	func: function(){
// 		alert(obj[symb1] + obj[symb2]);
// 	}
// }
// obj['func']();



///// symbol –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–∞—Å—Å–∏–≤—ã

// let arr = [1, 2, 3];
// let symb = Symbol('func');

// arr['func'] = function () {
// 	let res = 0;
// 	for(let i of arr) {
// 		res+=i
// 	}
// 	return res;
// }

// console.log(arr['func']())



////// symbol —á–µ—Ä–µ–∑ .for

// let arr = [1, 2, 3];

// let symb = Symbol.for('func');

// arr[symb] = function () {
// 	let res = 0;
// 	for(let i of arr) {
// 		res+=i
// 	}
// 	return res;
// }

// console.log(arr[symb]())



//////////// —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ slice

// function slice(str, start, end) {
//     return Array.from(str).slice(start, end).join('');
//   }
  
//   let str = 'ùí≥üòÇ©∑∂';
  
//   alert( slice(str, 1, 3) ); // üòÇ©∑∂
  
//   // –∞ –≤–æ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–µ –ø–∞—Ä—ã
//   alert( str.slice(1, 3) ); // –º—É—Å–æ—Ä (–¥–≤–µ —á–∞—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã—Ö –ø–∞—Ä)





////////// Symbol.iterator

// let range = {
// 	from: 1,
// 	to: 5
//   };
  
//   // 1. –≤—ã–∑–æ–≤ for..of —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
//   range[Symbol.iterator] = function() {
// 	// ...–æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞:
	
// 	// 2. –î–∞–ª–µ–µ, for..of —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —ç—Ç–∏–º –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞—è —É –Ω–µ–≥–æ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
// 	return {
// 	  current: this.from,
// 	  last: this.to,
  
// 	  // 3. next() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ for..of
// 	  next() {
// 		// 4. –æ–Ω –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ {done:.., value :...}
// 		if (this.current <= this.last) {
// 		  return { done: false, value: this.current++ };
// 		} else {
// 		  return { done: true };
// 		}
// 	  }
// 	};
//   };
  
//   // —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!
//   for (let num of range) {
// 	alert(num); // 1, –∑–∞—Ç–µ–º 2, 3, 4, 5
//   }


////////////// —Ç–æ–∂–µ —Å–∞–º–æ–µ –Ω–æ –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ

// let range = {
//     from: 1,
//     to: 5,
  
//     *[Symbol.iterator]() { // –∫—Ä–∞—Ç–∫–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è [Symbol.iterator]: function*()

//       for(let value = this.from; value <= this.to; value++) {
//         yield value;
//       }
//     }
//   };
  
//   alert( [...range] ); // 1,2,3,4,5



///////////////////// –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä


// function* func() {
// 	yield 1;
// 	yield 2;
// 	return 3;
//   }
  
//   let generator = func();
  
//   let one = generator.next();
  
//   alert(JSON.stringify(one)); // {value: 1, done: false}


// json

// let json = `{
// 	"a": ["a", "b", "c",],
// 	"b": "111",
// 	"c": "eee",
// }`;
// console.log(json)



//// json stringify

// let json = [];


// let ul = document.querySelectorAll('li');

// for(let elem of ul){
//     json.push(elem.innerHTML);
// }

// let arr = JSON.stringify(json);
// console.log(arr)


////// json parse –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// let json = `[
//     {
//     "name": "user1",
//     "age": 25,
//     "salary": 1000
//     },
//     {
//     "name": "user2",
//     "age": 26,
//     "salary": 2000
//     },
//     {
//     "name": "user3",
//     "age": 27,
//     "salary": 3000
//     }
//     ]`;

// let arrayUsers = JSON.parse(json);

// let newUser = {
//     name: "user4",
//     age: 28,
//     salary: 3500
// };
    
// arrayUsers.push(newUser);

// json = JSON.stringify(arrayUsers);

// console.log(json);